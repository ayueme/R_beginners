---
title: "类型判断和转换"
---

## 类型判断

每种类型都有一个判断类型的函数，以下是常见的几个：

```r
is.numeric()   # 是不是数值型？
is.character()
is.double()
is.integer()
is.factor()
is.complex()
is.logical()
is.na() 

is.data.frame() # 是不是data.frame
is.array()
is.matrix()
is.list()
```

创建几个变量用于演示：

```{r}
# 把一个数字存储到变量my_integer中
my_integer <- 5

integer_variable <- 186L

# 把一段文字存储到变量中
my_string <- "Hello, R!"
```

可以直接用`class()`或者`typeof()`：

```{r}
# 查看变量的类型
class(my_integer)
class(integer_variable)
class(my_string)
```

还可以使用`is.xxx()`判断是不是属于某种类型，比如查看`my_integer`的类型：

```{r}
is.numeric(my_integer) # 是数值型吗？是的，返回TRUE
is.logical(my_integer)  # 是逻辑型吗？不是，返回FLASE
```

```{r}
a <- c(1,2,3)
is.numeric(a)
```

`NA`表示缺失值，注意不要加引号，加了引号就变成字符型了：

```{r}
dd <- NA
is.na(dd)

dd <- "NA"
is.na(dd)
is.character(dd)
```

创建一个数据框用于演示：

```{r}
patientdata <- data.frame(
  patientID = c(1, 2, 3, 4), 
  age = c(25, 34, 28, 52), 
  diabetes = c("Type1", "Type2", "Type1", "Type1"), 
  status = c("Poor", "Improved", "Excellent", "Poor")
  )

is.data.frame(patientdata)
```

创建一个矩阵用于演示：

```{r}
y <- matrix(1:20, nrow=5, ncol=4,
            dimnames = list(c("行1","行2","行3","行4","行5"),
                            c("列1","列2","列3","列4"))
            ) 
is.matrix(y)
```

创建一个列表用于演示：

```{r}
g <- "My First List" # 字符串
h <- c(25, 26, 18, 39) # 数值型向量
j <- matrix(1:10, nrow=5) # 矩阵
k <- c("one", "two", "three") # 字符型向量
l <- list("apple",1,TRUE) # 列表

# 放到1个列表中
mylist <- list(title=g, ages=h, j, k, l)

is.list(mylist)
#is.vector(mylist)
```

## 类型转换

不同的向量之间可以相互转换。常见的类型转换函数：

```r
as.numeric()   # 变成数值型
as.character()
as.double()
as.integer()
as.factor()
as.complex()
as.logical()

as.data.frame() # 变成数据框
as.array()
as.matrix()
as.list()
```

数值型向量转换为字符型/因子型/逻辑型：

```{r}
a <- c(1,2,3)

as.character(a) # 变成字符型
as.factor(a)    # 变成因子型
as.logical(a)   # 变成逻辑型，无意义
```

字符型向量转换：

```{r}
d <- c("你好","我是","阿越")
d

as.numeric(d) # 错误用法，字符怎么能直接变数字呢？
as.factor(d) # 但是可以变因子
```

因子转换：

```{r}
f <- factor(c("你好","我是","阿越"))
f

as.numeric(f) # 直接变数字
as.character(f)
```

矩阵转换：

```{r}
as.data.frame(y)
#as.list(y) # 太长不演示
as.numeric(y)
as.factor(y)
as.character(y)
```

数据框转换：

```{r}
as.matrix(patientdata)
as.list(patientdata)
as.character(patientdata)
# as.numeric(patientdata) # 错误
# as.factor(patientdata) # 错误
```

列表转换：

```{r}
# as.data.frame(mylist) # 报错
as.matrix(mylist)
```

